//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Charts.chartsapi {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ChartsApiSoap", Namespace="http://tempuri.org/")]
    public partial class ChartsApi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertReceivedTransactionFromAPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionCountsByRecordDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterReceivedTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllReceivedTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalTransactionCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllReceivedTransactionsByVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionCountsByRecordDateAndVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllReceivedTransactionsOrderedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionCountsByVendorCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMostRecentTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerTypeDistributionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusDistributionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionsPerHourOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ChartsApi() {
            this.Url = global::Charts.Properties.Settings.Default.Charts_chartsapi_ChartsApi;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertReceivedTransactionFromAPICompletedEventHandler InsertReceivedTransactionFromAPICompleted;
        
        /// <remarks/>
        public event GetTransactionCountsByRecordDateCompletedEventHandler GetTransactionCountsByRecordDateCompleted;
        
        /// <remarks/>
        public event FilterReceivedTransactionsCompletedEventHandler FilterReceivedTransactionsCompleted;
        
        /// <remarks/>
        public event GetAllReceivedTransactionsCompletedEventHandler GetAllReceivedTransactionsCompleted;
        
        /// <remarks/>
        public event GetTotalTransactionCountCompletedEventHandler GetTotalTransactionCountCompleted;
        
        /// <remarks/>
        public event GetAllReceivedTransactionsByVendorCompletedEventHandler GetAllReceivedTransactionsByVendorCompleted;
        
        /// <remarks/>
        public event GetTransactionCountsByRecordDateAndVendorCompletedEventHandler GetTransactionCountsByRecordDateAndVendorCompleted;
        
        /// <remarks/>
        public event GetAllReceivedTransactionsOrderedCompletedEventHandler GetAllReceivedTransactionsOrderedCompleted;
        
        /// <remarks/>
        public event GetTransactionCountsByVendorCodeCompletedEventHandler GetTransactionCountsByVendorCodeCompleted;
        
        /// <remarks/>
        public event GetMostRecentTransactionsCompletedEventHandler GetMostRecentTransactionsCompleted;
        
        /// <remarks/>
        public event GetCustomerTypeDistributionCompletedEventHandler GetCustomerTypeDistributionCompleted;
        
        /// <remarks/>
        public event GetStatusDistributionCompletedEventHandler GetStatusDistributionCompleted;
        
        /// <remarks/>
        public event GetTransactionsPerHourCompletedEventHandler GetTransactionsPerHourCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertReceivedTransactionFromAPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertReceivedTransactionFromAPI(ReceivedTransactionDTO data) {
            this.Invoke("InsertReceivedTransactionFromAPI", new object[] {
                        data});
        }
        
        /// <remarks/>
        public void InsertReceivedTransactionFromAPIAsync(ReceivedTransactionDTO data) {
            this.InsertReceivedTransactionFromAPIAsync(data, null);
        }
        
        /// <remarks/>
        public void InsertReceivedTransactionFromAPIAsync(ReceivedTransactionDTO data, object userState) {
            if ((this.InsertReceivedTransactionFromAPIOperationCompleted == null)) {
                this.InsertReceivedTransactionFromAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReceivedTransactionFromAPIOperationCompleted);
            }
            this.InvokeAsync("InsertReceivedTransactionFromAPI", new object[] {
                        data}, this.InsertReceivedTransactionFromAPIOperationCompleted, userState);
        }
        
        private void OnInsertReceivedTransactionFromAPIOperationCompleted(object arg) {
            if ((this.InsertReceivedTransactionFromAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReceivedTransactionFromAPICompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionCountsByRecordDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTransactionCountsByRecordDate() {
            object[] results = this.Invoke("GetTransactionCountsByRecordDate", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionCountsByRecordDateAsync() {
            this.GetTransactionCountsByRecordDateAsync(null);
        }
        
        /// <remarks/>
        public void GetTransactionCountsByRecordDateAsync(object userState) {
            if ((this.GetTransactionCountsByRecordDateOperationCompleted == null)) {
                this.GetTransactionCountsByRecordDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionCountsByRecordDateOperationCompleted);
            }
            this.InvokeAsync("GetTransactionCountsByRecordDate", new object[0], this.GetTransactionCountsByRecordDateOperationCompleted, userState);
        }
        
        private void OnGetTransactionCountsByRecordDateOperationCompleted(object arg) {
            if ((this.GetTransactionCountsByRecordDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionCountsByRecordDateCompleted(this, new GetTransactionCountsByRecordDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FilterReceivedTransactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FilterReceivedTransactions(string transNo, string customerRef, string customerName, string customerType, string customerTel, string vendorTranId, string receiptNo, string vendorCode, string teller) {
            object[] results = this.Invoke("FilterReceivedTransactions", new object[] {
                        transNo,
                        customerRef,
                        customerName,
                        customerType,
                        customerTel,
                        vendorTranId,
                        receiptNo,
                        vendorCode,
                        teller});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FilterReceivedTransactionsAsync(string transNo, string customerRef, string customerName, string customerType, string customerTel, string vendorTranId, string receiptNo, string vendorCode, string teller) {
            this.FilterReceivedTransactionsAsync(transNo, customerRef, customerName, customerType, customerTel, vendorTranId, receiptNo, vendorCode, teller, null);
        }
        
        /// <remarks/>
        public void FilterReceivedTransactionsAsync(string transNo, string customerRef, string customerName, string customerType, string customerTel, string vendorTranId, string receiptNo, string vendorCode, string teller, object userState) {
            if ((this.FilterReceivedTransactionsOperationCompleted == null)) {
                this.FilterReceivedTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterReceivedTransactionsOperationCompleted);
            }
            this.InvokeAsync("FilterReceivedTransactions", new object[] {
                        transNo,
                        customerRef,
                        customerName,
                        customerType,
                        customerTel,
                        vendorTranId,
                        receiptNo,
                        vendorCode,
                        teller}, this.FilterReceivedTransactionsOperationCompleted, userState);
        }
        
        private void OnFilterReceivedTransactionsOperationCompleted(object arg) {
            if ((this.FilterReceivedTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterReceivedTransactionsCompleted(this, new FilterReceivedTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllReceivedTransactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllReceivedTransactions() {
            object[] results = this.Invoke("GetAllReceivedTransactions", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllReceivedTransactionsAsync() {
            this.GetAllReceivedTransactionsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllReceivedTransactionsAsync(object userState) {
            if ((this.GetAllReceivedTransactionsOperationCompleted == null)) {
                this.GetAllReceivedTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllReceivedTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetAllReceivedTransactions", new object[0], this.GetAllReceivedTransactionsOperationCompleted, userState);
        }
        
        private void OnGetAllReceivedTransactionsOperationCompleted(object arg) {
            if ((this.GetAllReceivedTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllReceivedTransactionsCompleted(this, new GetAllReceivedTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTotalTransactionCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTotalTransactionCount() {
            object[] results = this.Invoke("GetTotalTransactionCount", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalTransactionCountAsync() {
            this.GetTotalTransactionCountAsync(null);
        }
        
        /// <remarks/>
        public void GetTotalTransactionCountAsync(object userState) {
            if ((this.GetTotalTransactionCountOperationCompleted == null)) {
                this.GetTotalTransactionCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalTransactionCountOperationCompleted);
            }
            this.InvokeAsync("GetTotalTransactionCount", new object[0], this.GetTotalTransactionCountOperationCompleted, userState);
        }
        
        private void OnGetTotalTransactionCountOperationCompleted(object arg) {
            if ((this.GetTotalTransactionCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalTransactionCountCompleted(this, new GetTotalTransactionCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllReceivedTransactionsByVendor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllReceivedTransactionsByVendor(string vendorCode) {
            object[] results = this.Invoke("GetAllReceivedTransactionsByVendor", new object[] {
                        vendorCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllReceivedTransactionsByVendorAsync(string vendorCode) {
            this.GetAllReceivedTransactionsByVendorAsync(vendorCode, null);
        }
        
        /// <remarks/>
        public void GetAllReceivedTransactionsByVendorAsync(string vendorCode, object userState) {
            if ((this.GetAllReceivedTransactionsByVendorOperationCompleted == null)) {
                this.GetAllReceivedTransactionsByVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllReceivedTransactionsByVendorOperationCompleted);
            }
            this.InvokeAsync("GetAllReceivedTransactionsByVendor", new object[] {
                        vendorCode}, this.GetAllReceivedTransactionsByVendorOperationCompleted, userState);
        }
        
        private void OnGetAllReceivedTransactionsByVendorOperationCompleted(object arg) {
            if ((this.GetAllReceivedTransactionsByVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllReceivedTransactionsByVendorCompleted(this, new GetAllReceivedTransactionsByVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionCountsByRecordDateAndVendor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTransactionCountsByRecordDateAndVendor(string vendorCode) {
            object[] results = this.Invoke("GetTransactionCountsByRecordDateAndVendor", new object[] {
                        vendorCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionCountsByRecordDateAndVendorAsync(string vendorCode) {
            this.GetTransactionCountsByRecordDateAndVendorAsync(vendorCode, null);
        }
        
        /// <remarks/>
        public void GetTransactionCountsByRecordDateAndVendorAsync(string vendorCode, object userState) {
            if ((this.GetTransactionCountsByRecordDateAndVendorOperationCompleted == null)) {
                this.GetTransactionCountsByRecordDateAndVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionCountsByRecordDateAndVendorOperationCompleted);
            }
            this.InvokeAsync("GetTransactionCountsByRecordDateAndVendor", new object[] {
                        vendorCode}, this.GetTransactionCountsByRecordDateAndVendorOperationCompleted, userState);
        }
        
        private void OnGetTransactionCountsByRecordDateAndVendorOperationCompleted(object arg) {
            if ((this.GetTransactionCountsByRecordDateAndVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionCountsByRecordDateAndVendorCompleted(this, new GetTransactionCountsByRecordDateAndVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllReceivedTransactionsOrdered", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllReceivedTransactionsOrdered() {
            object[] results = this.Invoke("GetAllReceivedTransactionsOrdered", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllReceivedTransactionsOrderedAsync() {
            this.GetAllReceivedTransactionsOrderedAsync(null);
        }
        
        /// <remarks/>
        public void GetAllReceivedTransactionsOrderedAsync(object userState) {
            if ((this.GetAllReceivedTransactionsOrderedOperationCompleted == null)) {
                this.GetAllReceivedTransactionsOrderedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllReceivedTransactionsOrderedOperationCompleted);
            }
            this.InvokeAsync("GetAllReceivedTransactionsOrdered", new object[0], this.GetAllReceivedTransactionsOrderedOperationCompleted, userState);
        }
        
        private void OnGetAllReceivedTransactionsOrderedOperationCompleted(object arg) {
            if ((this.GetAllReceivedTransactionsOrderedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllReceivedTransactionsOrderedCompleted(this, new GetAllReceivedTransactionsOrderedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionCountsByVendorCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTransactionCountsByVendorCode() {
            object[] results = this.Invoke("GetTransactionCountsByVendorCode", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionCountsByVendorCodeAsync() {
            this.GetTransactionCountsByVendorCodeAsync(null);
        }
        
        /// <remarks/>
        public void GetTransactionCountsByVendorCodeAsync(object userState) {
            if ((this.GetTransactionCountsByVendorCodeOperationCompleted == null)) {
                this.GetTransactionCountsByVendorCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionCountsByVendorCodeOperationCompleted);
            }
            this.InvokeAsync("GetTransactionCountsByVendorCode", new object[0], this.GetTransactionCountsByVendorCodeOperationCompleted, userState);
        }
        
        private void OnGetTransactionCountsByVendorCodeOperationCompleted(object arg) {
            if ((this.GetTransactionCountsByVendorCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionCountsByVendorCodeCompleted(this, new GetTransactionCountsByVendorCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMostRecentTransactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMostRecentTransactions() {
            object[] results = this.Invoke("GetMostRecentTransactions", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMostRecentTransactionsAsync() {
            this.GetMostRecentTransactionsAsync(null);
        }
        
        /// <remarks/>
        public void GetMostRecentTransactionsAsync(object userState) {
            if ((this.GetMostRecentTransactionsOperationCompleted == null)) {
                this.GetMostRecentTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMostRecentTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetMostRecentTransactions", new object[0], this.GetMostRecentTransactionsOperationCompleted, userState);
        }
        
        private void OnGetMostRecentTransactionsOperationCompleted(object arg) {
            if ((this.GetMostRecentTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMostRecentTransactionsCompleted(this, new GetMostRecentTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerTypeDistribution", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCustomerTypeDistribution() {
            object[] results = this.Invoke("GetCustomerTypeDistribution", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerTypeDistributionAsync() {
            this.GetCustomerTypeDistributionAsync(null);
        }
        
        /// <remarks/>
        public void GetCustomerTypeDistributionAsync(object userState) {
            if ((this.GetCustomerTypeDistributionOperationCompleted == null)) {
                this.GetCustomerTypeDistributionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerTypeDistributionOperationCompleted);
            }
            this.InvokeAsync("GetCustomerTypeDistribution", new object[0], this.GetCustomerTypeDistributionOperationCompleted, userState);
        }
        
        private void OnGetCustomerTypeDistributionOperationCompleted(object arg) {
            if ((this.GetCustomerTypeDistributionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerTypeDistributionCompleted(this, new GetCustomerTypeDistributionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatusDistribution", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStatusDistribution() {
            object[] results = this.Invoke("GetStatusDistribution", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusDistributionAsync() {
            this.GetStatusDistributionAsync(null);
        }
        
        /// <remarks/>
        public void GetStatusDistributionAsync(object userState) {
            if ((this.GetStatusDistributionOperationCompleted == null)) {
                this.GetStatusDistributionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusDistributionOperationCompleted);
            }
            this.InvokeAsync("GetStatusDistribution", new object[0], this.GetStatusDistributionOperationCompleted, userState);
        }
        
        private void OnGetStatusDistributionOperationCompleted(object arg) {
            if ((this.GetStatusDistributionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusDistributionCompleted(this, new GetStatusDistributionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionsPerHour", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTransactionsPerHour() {
            object[] results = this.Invoke("GetTransactionsPerHour", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionsPerHourAsync() {
            this.GetTransactionsPerHourAsync(null);
        }
        
        /// <remarks/>
        public void GetTransactionsPerHourAsync(object userState) {
            if ((this.GetTransactionsPerHourOperationCompleted == null)) {
                this.GetTransactionsPerHourOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionsPerHourOperationCompleted);
            }
            this.InvokeAsync("GetTransactionsPerHour", new object[0], this.GetTransactionsPerHourOperationCompleted, userState);
        }
        
        private void OnGetTransactionsPerHourOperationCompleted(object arg) {
            if ((this.GetTransactionsPerHourCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionsPerHourCompleted(this, new GetTransactionsPerHourCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ReceivedTransactionDTO {
        
        private long tranIdField;
        
        private string transNoField;
        
        private string customerRefField;
        
        private string customerNameField;
        
        private string customerTypeField;
        
        private string customerTelField;
        
        private string areaField;
        
        private string tinField;
        
        private decimal tranAmountField;
        
        private System.DateTime paymentDateField;
        
        private System.DateTime recordDateField;
        
        private string tranTypeField;
        
        private string paymentTypeField;
        
        private string vendorTranIdField;
        
        private string receiptNoField;
        
        private string tranNarrationField;
        
        private bool smsSentField;
        
        private string vendorCodeField;
        
        private string tellerField;
        
        private System.Nullable<bool> reversalField;
        
        private System.Nullable<bool> cancelledField;
        
        private System.Nullable<bool> offlineField;
        
        private string utilityCodeField;
        
        private string utilityTranRefField;
        
        private bool sentToUtilityField;
        
        private string regionCodeField;
        
        private string districtCodeField;
        
        private string vendorTokenField;
        
        private System.Nullable<bool> reconFileProcessedField;
        
        private string statusField;
        
        private System.Nullable<int> sentToVendorField;
        
        private System.Nullable<System.DateTime> utilitySentDateField;
        
        private System.Nullable<System.DateTime> queueTimeField;
        
        private string reasonField;
        
        /// <remarks/>
        public long TranId {
            get {
                return this.tranIdField;
            }
            set {
                this.tranIdField = value;
            }
        }
        
        /// <remarks/>
        public string TransNo {
            get {
                return this.transNoField;
            }
            set {
                this.transNoField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerRef {
            get {
                return this.customerRefField;
            }
            set {
                this.customerRefField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerType {
            get {
                return this.customerTypeField;
            }
            set {
                this.customerTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerTel {
            get {
                return this.customerTelField;
            }
            set {
                this.customerTelField = value;
            }
        }
        
        /// <remarks/>
        public string Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public string Tin {
            get {
                return this.tinField;
            }
            set {
                this.tinField = value;
            }
        }
        
        /// <remarks/>
        public decimal TranAmount {
            get {
                return this.tranAmountField;
            }
            set {
                this.tranAmountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PaymentDate {
            get {
                return this.paymentDateField;
            }
            set {
                this.paymentDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RecordDate {
            get {
                return this.recordDateField;
            }
            set {
                this.recordDateField = value;
            }
        }
        
        /// <remarks/>
        public string TranType {
            get {
                return this.tranTypeField;
            }
            set {
                this.tranTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string VendorTranId {
            get {
                return this.vendorTranIdField;
            }
            set {
                this.vendorTranIdField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiptNo {
            get {
                return this.receiptNoField;
            }
            set {
                this.receiptNoField = value;
            }
        }
        
        /// <remarks/>
        public string TranNarration {
            get {
                return this.tranNarrationField;
            }
            set {
                this.tranNarrationField = value;
            }
        }
        
        /// <remarks/>
        public bool SmsSent {
            get {
                return this.smsSentField;
            }
            set {
                this.smsSentField = value;
            }
        }
        
        /// <remarks/>
        public string VendorCode {
            get {
                return this.vendorCodeField;
            }
            set {
                this.vendorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Teller {
            get {
                return this.tellerField;
            }
            set {
                this.tellerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Reversal {
            get {
                return this.reversalField;
            }
            set {
                this.reversalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Cancelled {
            get {
                return this.cancelledField;
            }
            set {
                this.cancelledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Offline {
            get {
                return this.offlineField;
            }
            set {
                this.offlineField = value;
            }
        }
        
        /// <remarks/>
        public string UtilityCode {
            get {
                return this.utilityCodeField;
            }
            set {
                this.utilityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UtilityTranRef {
            get {
                return this.utilityTranRefField;
            }
            set {
                this.utilityTranRefField = value;
            }
        }
        
        /// <remarks/>
        public bool SentToUtility {
            get {
                return this.sentToUtilityField;
            }
            set {
                this.sentToUtilityField = value;
            }
        }
        
        /// <remarks/>
        public string RegionCode {
            get {
                return this.regionCodeField;
            }
            set {
                this.regionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DistrictCode {
            get {
                return this.districtCodeField;
            }
            set {
                this.districtCodeField = value;
            }
        }
        
        /// <remarks/>
        public string VendorToken {
            get {
                return this.vendorTokenField;
            }
            set {
                this.vendorTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ReconFileProcessed {
            get {
                return this.reconFileProcessedField;
            }
            set {
                this.reconFileProcessedField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SentToVendor {
            get {
                return this.sentToVendorField;
            }
            set {
                this.sentToVendorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UtilitySentDate {
            get {
                return this.utilitySentDateField;
            }
            set {
                this.utilitySentDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> QueueTime {
            get {
                return this.queueTimeField;
            }
            set {
                this.queueTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InsertReceivedTransactionFromAPICompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTransactionCountsByRecordDateCompletedEventHandler(object sender, GetTransactionCountsByRecordDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionCountsByRecordDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionCountsByRecordDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FilterReceivedTransactionsCompletedEventHandler(object sender, FilterReceivedTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterReceivedTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterReceivedTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetAllReceivedTransactionsCompletedEventHandler(object sender, GetAllReceivedTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllReceivedTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllReceivedTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTotalTransactionCountCompletedEventHandler(object sender, GetTotalTransactionCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalTransactionCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalTransactionCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetAllReceivedTransactionsByVendorCompletedEventHandler(object sender, GetAllReceivedTransactionsByVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllReceivedTransactionsByVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllReceivedTransactionsByVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTransactionCountsByRecordDateAndVendorCompletedEventHandler(object sender, GetTransactionCountsByRecordDateAndVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionCountsByRecordDateAndVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionCountsByRecordDateAndVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetAllReceivedTransactionsOrderedCompletedEventHandler(object sender, GetAllReceivedTransactionsOrderedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllReceivedTransactionsOrderedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllReceivedTransactionsOrderedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTransactionCountsByVendorCodeCompletedEventHandler(object sender, GetTransactionCountsByVendorCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionCountsByVendorCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionCountsByVendorCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetMostRecentTransactionsCompletedEventHandler(object sender, GetMostRecentTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMostRecentTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMostRecentTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetCustomerTypeDistributionCompletedEventHandler(object sender, GetCustomerTypeDistributionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerTypeDistributionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerTypeDistributionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetStatusDistributionCompletedEventHandler(object sender, GetStatusDistributionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusDistributionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusDistributionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTransactionsPerHourCompletedEventHandler(object sender, GetTransactionsPerHourCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionsPerHourCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionsPerHourCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591